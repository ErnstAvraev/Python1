# # Задача 30: Заполните массив элементами арифметической прогрессии.
# # Её первый элемент, разность и количество элементов нужно ввести с клавиатуры.
# # Формула для получения n-го члена прогрессии: an = a1 + (n-1) * d. Каждое число
# # вводится с новой строки.
# # Ввод: 7 2 5
# # Вывод: 7 9 11 13 15

from random import randint as rnd


# def arif_progress(first, step, size, lst=[]):
#     for i in range(size):
#         an = first + (i)*step
#         lst.append(an)
#     print(lst)


# a1 = int(input("Введите первое число последовательности: "))
# d = int(input("Введите шаг последовательности: "))
# n = int(input("Введите количество элементов последовательности: "))

# arif_progress(a1, d, n)

# # Задача 32: Определить индексы элементов массива (списка), значения которых
# # принадлежат заданному диапазону (т.е. не меньше заданного минимума и не больше
# # заданного максимума)
# # Ввод: [-5, 9, 0, 3, -1, -2, 1, 4,-2,10,2,0,-9,8,10,-9, 0, -5, -5, 7]
# # Вывод: [1, 9, 13, 14, 19]


# def in_range(arr):
#     sp_index = []
#     for i in range(len(sp)):
#         if sp[i] >= start and sp[i] <= end:
#             sp_index.append(i)
#     print(sp_index)


# start = int(input("Введите начало диапазона: "))
# end = int(input("Введите конец диапазона: "))
# sp = [(rnd(-10, 10)) for _ in range(rnd(10, 15))]
# print(sp)
# in_range(sp)

# Задача HARD SORT необязательная. 
# Задайте двумерный массив из целых чисел. Количество строк и столбцов задается с 
# клавиатуры. Отсортировать элементы по возрастанию слева направо и сверху вниз.
# Например, задан массив:
# 1 4 7 2
# 5 9 10 3
# После сортировки
# 1 2 3 4
# 5 7 9 10

# задача 2 HARD необязательная 
# Сгенерировать массив случайных целых чисел размерностью m*n (размерность вводим 
# с клавиатуры) , причем чтоб количество элементов было четное. Вывести на экран 
# красивенько таблицей. Перемешать случайным образом элементы массива, причем 
# чтобы каждый гарантированно и только один раз переместился на другое место и 
# выполнить это за m*n / 2 итераций. То есть если массив три на четыре, то надо 
# выполнить не более 6 итераций. И далее в конце опять вывести на экран как таблицу.